// <auto-generated />
using System;
using Infraestructura.LogicaAccesoDatos.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infraestructura.Migrations
{
    [DbContext(typeof(LibreriaContext))]
    partial class LibreriaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AutorTema", b =>
                {
                    b.Property<int>("MiAutoresId")
                        .HasColumnType("int");

                    b.Property<int>("MisTemasId")
                        .HasColumnType("int");

                    b.HasKey("MiAutoresId", "MisTemasId");

                    b.HasIndex("MisTemasId");

                    b.ToTable("AutorTema");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("FechaDefuncion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("MiPaisId")
                        .HasColumnType("int");

                    b.Property<string>("Nacionalidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroReferencia")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MiPaisId");

                    b.ToTable("Autores");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Tema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Temas");
                });

            modelBuilder.Entity("AutorTema", b =>
                {
                    b.HasOne("LogicaNegocio.Entidades.Autor", null)
                        .WithMany()
                        .HasForeignKey("MiAutoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LogicaNegocio.Entidades.Tema", null)
                        .WithMany()
                        .HasForeignKey("MisTemasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Autor", b =>
                {
                    b.HasOne("LogicaNegocio.Entidades.Pais", "MiPais")
                        .WithMany("MisAutores")
                        .HasForeignKey("MiPaisId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.OwnsOne("LogicaNegocio.Entidades.Direccion", "MiDireccion", b1 =>
                        {
                            b1.Property<int>("AutorId")
                                .HasColumnType("int");

                            b1.Property<string>("Calle")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("direccion_calle");

                            b1.Property<string>("Nro")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("direccion_nro");

                            b1.HasKey("AutorId");

                            b1.ToTable("Autores");

                            b1.WithOwner()
                                .HasForeignKey("AutorId");
                        });

                    b.Navigation("MiDireccion")
                        .IsRequired();

                    b.Navigation("MiPais");
                });

            modelBuilder.Entity("LogicaNegocio.Entidades.Pais", b =>
                {
                    b.Navigation("MisAutores");
                });
#pragma warning restore 612, 618
        }
    }
}
